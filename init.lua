 -- luacheck: globals rhyn minetest shout
local thismod = minetest.get_current_modname()
--local modpath = minetest.get_modpath(thismod)
local tm = thismod
--local parentmod = "rhyn"
local genera = {"canarium"}

for g = 1, #genera do
rhyn.modules[tm] = {genera = {genera[g]}}

local def = {
    parentmod = tm,
    visual = "mesh",
    genus = "canarium",
    root_dim = 2,
    health_max = 10,
    growth_interval = 100,
    substrates = {"nc_terrain:stone"},
    growth_factor = {names = {"nc_fire:ash"},values = {8}},
    survival_factor = {names = {"group:igniter"}, values = {-9}},
    spore_dis_rad = 3,
    condition_factor = {},
    catchments = {base = 1, ext = 2},
    structure = {{tm..":canarium"}},
    stage = stage,
    traits = {growth_opt = true, pt2condition = true},
    acts = {
       on_tick = function(...)
            --[[local val = rhyn.f.selectify(...)
            local pos,genus = val[1], val[2]
            if(not rhyn.f.is_rooted(pos))then return rhyn.rn(pos) end
            if(rhyn.f.kill_if_health(pos,0))then return end
            rhyn.f.alter_health(pos,-rhyn.f.spot_check(pos,"group:igniter"))
            
            --local data = rhyn.f.nominate(minetest.get_node(pos).name)
            local function incr()
            rhyn.f.growth_tick(pos,genus)
            end
            incr()]]
          end
    }
}

rhyn.f.register_emulsion(def)

    local k = genera[g]
    local v = def
    for n = 1, 1 do
        for nn = 1, 1 do
            local name = k.."_mat_1"
            local ndef = {
                genus = k,
                name = tm..":"..name,
                description = k,
                paramtype = "light",
                paramtype2 = "connected",
                sunlight_propagates = true,
                walkable = true,
                drawtype = "nodebox",
                node_box = {
        type = "connected",
        fixed = {
            {-0.1875, -0.5, -0.1875, 0.125, 0.5, 0.1875},
            {0.125, 0.0625, 0.0625, 0.1875, 0.375, 0.125},
            {0.125, -0.3125, -0.0625, 0.1875, 0.125, 0},
            {0.125, -0.3125, 0.125, 0.1875, -0.125, 0.1875},
            {-0.25, -0.3125, 0.0625, -0.1875, -0.125, 0.125},
            {-0.25, -0.1875, -0.125, -0.1875, 0.1875, -0.0625},
            {-0.125, 0.125, -0.25, -0.0625, 0.5, -0.1875},
            {0, -0.5, -0.25, 0.0625, -0.25, -0.1875},
            {-0.125, 0, 0.1875, -0.0625, 0.375, 0.25},
            {0.0625, -0.4375, 0.1875, 0.125, -0.125, 0.25},
        },
    
    connect_top = {
        {-0, 0.375, -0.3125, 0.0625, 0.5, -0.1875},
            {-0, 0.375, 0.1875, 0.0625, 0.5, 0.3125},
            {-0.125, 0.375, 0.1875, -0.0625, 0.5, 0.25},
            {0.1875, 0.375, 0.125, 0.3125, 0.5, 0.1875},
            {0.1875, 0.375, -0.0625, 0.25, 0.5, 0},
            {-0.3125, 0.375, -0.0625, -0.125, 0.5, 0},
            {-0.25, 0.375, 0.0625, -0.125, 0.5, 0.125},
            {-0.25, 0.375, -0.25, -0.0625, 0.5, -0.1875}, 
            {-0.5, 0.4375, -0.25, -0.25, 0.5, -0.1875}, 
            {-0.4375, 0.4375, -0.4375, -0.375, 0.5, -0.25}, 
            {0.0625, 0.4375, -0.3125, 0.3125, 0.5, -0.25}, 
            {0.125, 0.4375, -0.5, 0.1875, 0.5, -0.3125}, -- 
            {0.1875, 0.4375, -0.5, 0.375, 0.5, -0.4375}, -- 
            {-0.125, 0.4375, -0.4375, 0.125, 0.5, -0.375}, 
            {-0.125, 0.4375, -0.375, -0.0625, 0.5, -0.3125},
            {-0.3125, 0.4375, -0.375, -0.125, 0.5, -0.3125}, --
            {-0.25, 0.4375, -0.5, -0.1875, 0.5, -0.375}, -- 
            {0.25, 0.4375, -0.25, 0.5, 0.5, -0.1875}, -- 
            {0.375, 0.4375, -0.25, 0.4375, 0.5, 0}, -- 
            {0.4375, 0.4375, -0.125, 0.5, 0.5, -0.0625}, -- 
            {0.25, 0.4375, 0.1875, 0.3125, 0.5, 0.5}, -- 
            {0.3125, 0.4375, 0.3125, 0.5, 0.5, 0.375}, -- 
            {0.4375, 0.4375, 0.125, 0.5, 0.5, 0.3125}, -- 
            {0.375, 0.4375, 0.375, 0.4375, 0.5, 0.5}, -- 
            {0.0625, 0.4375, 0.4375, 0.25, 0.5, 0.5}, -- 
            {0.125, 0.4375, 0.25, 0.1875, 0.5, 0.4375}, -- 
            {-0.3125, 0.4375, 0.25, -0.0625, 0.5, 0.3125}, -- 
            {-0.3125, 0.4375, 0.3125, -0.25, 0.5, 0.5}, -- 
            {-0.1875, 0.4375, 0.3125, -0.125, 0.5, 0.5}, -- 
            {-0, 0.4375, 0.3125, 0.0625, 0.5, 0.375}, -- 
            {-0.125, 0.4375, 0.375, -0.0625, 0.5, 0.4375}, -- 
            {-0.5, 0.4375, 0.0625, -0.25, 0.5, 0.125}, -- 
            {-0.5, 0.4375, -0.0625, -0.3125, 0.5, 0}, -- 
            {-0.4375, 0.4375, 0.125, -0.375, 0.5, 0.4375}, -- 
            {-0.5, 0.4375, 0.375, -0.4375, 0.5, 0.4375}, -- 
            {-0.5, 0.4375, 0.1875, -0.4375, 0.5, 0.25}, -- 
            {-0.5, 0.4375, -0.125, -0.4375, 0.5, -0.0625}, -- 
            {-0.3125, 0.4375, -0.125, -0.25, 0.5, -0.0625},
            {0.4375, 0.5, -0.3125, 0.5, 0.8125, -0.25}, -- 
            {0.4375, 0.5, -0.125, 0.5, 0.625, -0.0625}, -- 
            {0.4375, 0.5, -0, 0.5, 0.875, 0.0625}, -- 
            {-0.5, 0.5, -0, -0.4375, 0.6875, 0.0625}, -- 
            {-0.5, 0.5, -0.25, -0.4375, 0.8125, -0.1875}, -- 
            {-0.5, 0.5, -0.1875, -0.4375, 0.625, -0.125}, -- 
            {-0.5, 0.5, 0.25, -0.4375, 0.75, 0.3125}, -- 
            {0.3125, 0.5, 0.4375, 0.375, 0.75, 0.5}, -- 
            {0, 0.5, 0.4375, 0.0625, 0.625, 0.5}, -- 
            {-0.1875, 0.5, 0.4375, -0.125, 0.6875, 0.5}, -- 
            {-0.125, 0.5, 0.4375, -0.0625, 0.625, 0.5}, -- 
            {-0.125, 0.5, -0.5, -0.0625, 0.625, -0.4375}, -- 
            {-0.0625, 0.5, -0.5, 0, 0.6875, -0.4375}, -- 
            {0.25, 0.5, -0.5, 0.3125, 0.6875, -0.4375}, -- 
            {-0.3125, 0.5, -0.5, -0.25, 0.8125, -0.4375}, -- 
            {0.4375, 0.5, 0.4375, 0.5, 0.75, 0.5}, -- 
            {0.4375, 0.5, 0.25, 0.5, 0.6875, 0.3125}, -- 
            {0.4375, 0.5, 0.125, 0.5, 0.8125, 0.1875}, -- 
    },
    connect_bottom = {
        {-0.0625, -0.5, -0.3125, 0, -0.375, -0.1875}, -- 
            {-0.0625, -0.5, 0.1875, 0, -0.375, 0.3125}, -- 
            {0.0625, -0.5, 0.1875, 0.125, -0.375, 0.25}, -- 
            {-0.3125, -0.5, 0.125, -0.1875, -0.375, 0.1875}, -- 
            {-0.25, -0.5, -0.0625, -0.1875, -0.375, 0}, -- 
            {0.125, -0.5, -0.0625, 0.3125, -0.375, 0}, -- 
            {0.125, -0.5, 0.0625, 0.25, -0.375, 0.125}, -- 
            {0.0625, -0.5, -0.25, 0.25, -0.375, -0.1875}, -- 
            {0.25, -0.5, -0.25, 0.5, -0.4375, -0.1875}, -- 
            {0.375, -0.5, -0.4375, 0.4375, -0.4375, -0.25}, -- 
            {-0.3125, -0.5, -0.3125, -0.0625, -0.4375, -0.25}, -- 
            {-0.1875, -0.5, -0.5, -0.125, -0.4375, -0.3125}, -- 
            {-0.375, -0.5, -0.5, -0.1875, -0.4375, -0.4375}, -- 
            {-0.125, -0.5, -0.4375, 0.125, -0.4375, -0.375}, -- 
            {0.0625, -0.5, -0.375, 0.125, -0.4375, -0.3125}, -- 
            {0.125, -0.5, -0.375, 0.3125, -0.4375, -0.3125}, -- 
            {0.1875, -0.5, -0.5, 0.25, -0.4375, -0.375}, -- 
            {-0.5, -0.5, -0.25, -0.25, -0.4375, -0.1875}, -- 
            {-0.4375, -0.5, -0.25, -0.375, -0.4375, 0}, -- 
            {-0.5, -0.5, -0.125, -0.4375, -0.4375, -0.0625}, -- 
            {-0.3125, -0.5, 0.1875, -0.25, -0.4375, 0.5}, -- 
            {-0.5, -0.5, 0.3125, -0.3125, -0.4375, 0.375}, -- 
            {-0.5, -0.5, 0.125, -0.4375, -0.4375, 0.3125}, -- 
            {-0.4375, -0.5, 0.375, -0.375, -0.4375, 0.5}, -- 
            {-0.25, -0.5, 0.4375, -0.0625, -0.4375, 0.5}, -- 
            {-0.1875, -0.5, 0.25, -0.125, -0.4375, 0.4375}, -- 
            {0.0625, -0.5, 0.25, 0.3125, -0.4375, 0.3125}, -- 
            {0.25, -0.5, 0.3125, 0.3125, -0.4375, 0.5}, -- 
            {0.125, -0.5, 0.3125, 0.1875, -0.4375, 0.5}, -- 
            {-0.0625, -0.5, 0.3125, 0, -0.4375, 0.375}, -- 
            {0.0625, -0.5, 0.375, 0.125, -0.4375, 0.4375}, -- 
            {0.25, -0.5, 0.0625, 0.5, -0.4375, 0.125}, -- 
            {0.3125, -0.5, -0.0625, 0.5, -0.4375, 0}, -- 
            {0.375, -0.5, 0.125, 0.4375, -0.4375, 0.4375}, -- 
            {0.4375, -0.5, 0.375, 0.5, -0.4375, 0.4375}, -- 
            {0.4375, -0.5, 0.1875, 0.5, -0.4375, 0.25}, -- 
            {0.4375, -0.5, -0.125, 0.5, -0.4375, -0.0625}, -- 
            {0.25, -0.5, -0.125, 0.3125, -0.4375, -0.0625}, -- 
            {0.4375, -0.8125, 0.25, 0.5, -0.5, 0.3125}, -- 
            {0.4375, -0.625, 0.0625, 0.5, -0.5, 0.125}, -- 
            {0.4375, -0.875, -0.0625, 0.5, -0.5, 0}, -- 
            {-0.5, -0.6875, -0.0625, -0.4375, -0.5, 0}, -- 
            {-0.5, -0.8125, 0.1875, -0.4375, -0.5, 0.25}, -- 
            {-0.5, -0.625, 0.125, -0.4375, -0.5, 0.1875}, -- 
            {-0.5, -0.75, -0.3125, -0.4375, -0.5, -0.25}, -- 
            {0.3125, -0.75, -0.5, 0.375, -0.5, -0.4375}, -- 
            {0, -0.625, -0.5, 0.0625, -0.5, -0.4375}, -- 
            {-0.1875, -0.6875, -0.5, -0.125, -0.5, -0.4375}, -- 
            {-0.125, -0.625, -0.5, -0.0625, -0.5, -0.4375}, -- 
            {-0.125, -0.625, 0.4375, -0.0625, -0.5, 0.5}, -- 
            {-0.0625, -0.6875, 0.4375, 0, -0.5, 0.5}, -- 
            {0.25, -0.6875, 0.4375, 0.3125, -0.5, 0.5}, -- 
            {-0.3125, -0.8125, 0.4375, -0.25, -0.5, 0.5}, 
            {0.4375, -0.75, -0.5, 0.5, -0.5, -0.4375},
            {0.4375, -0.6875, -0.3125, 0.5, -0.5, -0.25}, 
            {0.4375, -0.8125, -0.1875, 0.5, -0.5, -0.125},
},},
    connects_to = {"nc_tree:tree", "nc_tree:root","group:canarium_root"},
    connect_sides = {"top", "bottom"},
                tiles = {"canarium_trunk.png","canarium_trunk2.png"},
                groups = {planty = 1, rhyn_plant = 1, choppy = 2,flammable = 8,fire_fuel = 6,log = 1,falling_node = 1,
            scaling_time = 52},
                on_construct = function(pos)
                local meta = minetest.get_meta(pos)
                meta:set_int("rhyn_gl",1)
                meta:set_int("rhyn_ci",1)
                meta:set_int("rhyn_h",v.health_max)
                end,
                on_punch = function(pos)
                    local m = minetest.get_meta(pos)
                    shout("GROWTH: "..m:get_int("rhyn_gi"))
                    shout("CONDITION: "..m:get_int("rhyn_ci"))
                    shout("HEALTH: "..rhyn.f.check_health(pos))
                    return
                end
            }
            rhyn.f.rnode(ndef)
        end
    end
end
for n = 1, 2 do
minetest.register_node(tm..":canarium_root_"..n, {
    tiles = minetest.registered_nodes[n == 1 and "nc_tree:root" or "nc_tree:tree"].tiles,
    drawtype = "nodebox",
    paramtype = "light",
    node_box = {
        type = "fixed",
        fixed = {
            {-0.4375, -0.5, -0.4375, 0.4375, 0.5, 0.4375}, -- NodeBox1
        }
    },
    groups = {rhyn = 1, canarium_root = 1}
})
end
minetest.register_node(tm..":canarium_leaves", {
    description = "Mosa Leaves",
    drawtype = "allfaces_optional",
    waving = 1,
    tiles = {"canarium_leaves.png"},
    groups = {rhyn_plant = 1},
})